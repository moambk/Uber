/*==============================================================*/
/* Nom de SGBD :  PostgreSQL 8                                  */
/* Date de création :  01/01/2001                               */
/*==============================================================*/
DROP TABLE IF EXISTS ADRESSE CASCADE;
DROP TABLE IF EXISTS APPARTIENT_2 CASCADE;
DROP TABLE IF EXISTS A_3 CASCADE;
DROP TABLE IF EXISTS A_COMME_CATEGORIE CASCADE;
DROP TABLE IF EXISTS A_COMME_TYPE CASCADE;
DROP TABLE IF EXISTS CARTE_BANCAIRE CASCADE;
DROP TABLE IF EXISTS CATEGORIE_PRESTATION CASCADE;
DROP TABLE IF EXISTS CATEGORIE_PRODUIT CASCADE;
DROP TABLE IF EXISTS CLIENT CASCADE;
DROP TABLE IF EXISTS CODE_POSTAL CASCADE;
DROP TABLE IF EXISTS COMMANDE CASCADE;
DROP TABLE IF EXISTS CONTIENT_2 CASCADE;
DROP TABLE IF EXISTS COURSE CASCADE;
DROP TABLE IF EXISTS COURSIER CASCADE;
DROP TABLE IF EXISTS DEPARTEMENT CASCADE;
DROP TABLE IF EXISTS ENTREPRISE CASCADE;
DROP TABLE IF EXISTS EST_SITUE_A_2 CASCADE;
DROP TABLE IF EXISTS ETABLISSEMENT CASCADE;
DROP TABLE IF EXISTS FACTURE CASCADE;
DROP TABLE IF EXISTS HORAIRES CASCADE;
DROP TABLE IF EXISTS HORAIRES_COURSIER CASCADE;
DROP TABLE IF EXISTS PANIER CASCADE;
DROP TABLE IF EXISTS PAYS CASCADE;
DROP TABLE IF EXISTS PLANNING_RESERVATION CASCADE;
DROP TABLE IF EXISTS PRODUIT CASCADE;
DROP TABLE IF EXISTS REGLEMENT_SALAIRE CASCADE;
DROP TABLE IF EXISTS RESERVATION CASCADE;
DROP TABLE IF EXISTS TYPE_PRESTATION CASCADE;
DROP TABLE IF EXISTS VEHICULE CASCADE;
DROP TABLE IF EXISTS VELO CASCADE;
DROP TABLE IF EXISTS VILLE CASCADE;
/*==============================================================*/
/* Table : ADRESSE                                              */
/*==============================================================*/
CREATE TABLE ADRESSE (
    IDADRESSE INT4 NOT NULL,
    IDVILLE INT4 NULL,
    LIBELLEADRESSE VARCHAR(100) NULL,
    CONSTRAINT PK_ADRESSE PRIMARY KEY (IDADRESSE)
);
/*==============================================================*/
/* Table : APPARTIENT_2                                         */
/*==============================================================*/
CREATE TABLE APPARTIENT_2 (
    IDCB INT4 NOT NULL,
    IDCLIENT INT4 NOT NULL,
    CONSTRAINT PK_APPARTIENT_2 PRIMARY KEY (IDCB, IDCLIENT)
);
/*==============================================================*/
/* Table : A_3                                                  */
/*==============================================================*/
CREATE TABLE A_3 (
    IDPRODUIT INT4 NOT NULL,
    IDCATEGORIE INT4 NOT NULL,
    CONSTRAINT PK_A_3 PRIMARY KEY (IDPRODUIT, IDCATEGORIE)
);
/*==============================================================*/
/* Table : A_COMME_TYPE                                         */
/*==============================================================*/
CREATE TABLE A_COMME_TYPE (
    IDVEHICULE INT4 NOT NULL,
    IDPRESTATION INT4 NOT NULL,
    CONSTRAINT PK_A_COMME_TYPE PRIMARY KEY (IDVEHICULE, IDPRESTATION)
);
/*==============================================================*/
/* Table : CARTE_BANCAIRE                                       */
/*==============================================================*/
CREATE TABLE CARTE_BANCAIRE (
    IDCB SERIAL PRIMARY KEY,
    NUMEROCB NUMERIC(16, 0) NOT NULL UNIQUE,
    DATEEXPIRECB DATE NOT NULL,
    CONSTRAINT CK_CB_DATEEXPIRE CHECK (DATEEXPIRECB >= CURRENT_DATE),
    CRYPTOGRAMME NUMERIC(3, 0) NOT NULL,
    TYPECARTE VARCHAR(30) NOT NULL,
    TYPERESEAUX VARCHAR(30) NOT NULL
);
/*==============================================================*/
/* Table : CATEGORIE_PRODUIT                                    */
/*==============================================================*/
CREATE TABLE CATEGORIE_PRODUIT (
    IDCATEGORIE INT4 NOT NULL,
    NOMCATEGORIE VARCHAR(100) NULL,
    CONSTRAINT PK_CATEGORIE_PRODUIT PRIMARY KEY (IDCATEGORIE)
);
/*==============================================================*/
/* Table : CLIENT                                               */
/*==============================================================*/
CREATE TABLE CLIENT (
    IDCLIENT INT4 NOT NULL,
    IDENTREPRISE INT4 NULL,
    IDADRESSE INT4 NOT NULL,
    GENREUSER VARCHAR(20) NOT NULL,
    CONSTRAINT CK_CLIENT_GENRE CHECK (GENREUSER IN ('Monsieur', 'Madame')),
    NOMUSER VARCHAR(50) NOT NULL,
    PRENOMUSER VARCHAR(50) NOT NULL,
    DATENAISSANCE DATE NOT NULL,
    CONSTRAINT CK_DATE_NAISS CHECK (
        DATENAISSANCE <= CURRENT_DATE - INTERVAL '18 years'
    ),
    TELEPHONE VARCHAR(15) NOT NULL,
    CONSTRAINT CK_CLIENT_TEL CHECK (TELEPHONE ~ '^(06|07)[0-9]{8}$'),
    EMAILUSER VARCHAR(200) NOT NULL,
    CONSTRAINT UQ_CLIENT UNIQUE (EMAILUSER),
    MOTDEPASSEUSER VARCHAR(200) NOT NULL,
    PHOTOPROFILE VARCHAR(300) NULL,
    SOUHAITERECEVOIRBONPLAN BOOL NULL,
    -- AUTH_MULTIFACTEUR : TRUE si le client est authentifié par plusieurs facteurs
    AUTH_MULTIFACTEUR BOOLEAN DEFAULT FALSE NOT NULL,
    -- DATE_SUPPRESSION : date de suppression du client
    DATE_SUPPRESSION DATE NULL,
    CONSTRAINT CK_DATE_SUPPRESSION CHECK (
        DATE_SUPPRESSION IS NULL
        OR DATE_SUPPRESSION >= CURRENT_DATE
    ),
    CONSTRAINT PK_CLIENT PRIMARY KEY (IDCLIENT)
);
/*==============================================================*/
/* Table : CODE_POSTAL                                          */
/*==============================================================*/
CREATE TABLE CODE_POSTAL (
    IDCODEPOSTAL INT4 NOT NULL,
    IDPAYS INT4 NULL,
    CODEPOSTAL CHAR(5) NOT NULL,
    CONSTRAINT UQ_CODEPOSTAL UNIQUE (CODEPOSTAL),
    CONSTRAINT PK_CODE_POSTAL PRIMARY KEY (IDCODEPOSTAL)
);
/*==============================================================*/
/* Table : COMMANDE                                             */
/*==============================================================*/
CREATE TABLE COMMANDE (
    IDCOMMANDE INT4 NOT NULL,
    IDPANIER INT4 NOT NULL,
    IDCOURSIER INT4 NULL,
    IDADRESSE INT4 NOT NULL,
    ADR_IDADRESSE INT4 NOT NULL,
    PRIXCOMMANDE DECIMAL(5, 2) NOT NULL,
    CONSTRAINT CK_COMMANDE_PRIX CHECK (PRIXCOMMANDE >= 0),
    TEMPSCOMMANDE INT4 NOT NULL,
    CONSTRAINT CK_TEMPS_COMMANDE CHECK (TEMPSCOMMANDE >= 0),
    ESTLIVRAISON BOOL NOT NULL,
    STATUTCOMMANDE VARCHAR(20) NOT NULL,
    CONSTRAINT CK_STATUT_COMMANDE CHECK (
        STATUTCOMMANDE IN ('En attente', 'En cours', 'Livrée', 'Annulée')
    ),
    CONSTRAINT PK_COMMANDE PRIMARY KEY (IDCOMMANDE)
);
/*==============================================================*/
/* Table : CONTIENT_2                                           */
/*==============================================================*/
CREATE TABLE CONTIENT_2 (
    IDPANIER INT4 NOT NULL,
    IDPRODUIT INT4 NOT NULL,
    CONSTRAINT PK_CONTIENT_2 PRIMARY KEY (IDPANIER, IDPRODUIT)
);
/*==============================================================*/
/* Table : COURSE                                               */
/*==============================================================*/
CREATE TABLE COURSE (
    IDCOURSE INT4 NOT NULL,
    IDCOURSIER INT4 NULL,
    IDCB INT4 NULL,
    IDADRESSE INT4 NOT NULL,
    IDRESERVATION INT4 NOT NULL,
    ADR_IDADRESSE INT4 NOT NULL,
    IDPRESTATION INT4 NOT NULL,
    DATECOURSE DATE NOT NULL,
    HEURECOURSE TIME NOT NULL,
    PRIXCOURSE NUMERIC(6, 2) NOT NULL,
    CONSTRAINT CK_COURSE_PRIX CHECK (PRIXCOURSE >= 0),
    STATUTCOURSE VARCHAR(20) NOT NULL,
    CONSTRAINT CK_COURSE_STATUT CHECK (
        STATUTCOURSE IN ('En attente', 'En cours', 'Terminée', 'Annulée')
    ),
    NOTECOURSE NUMERIC(2, 1) NULL,
    CONSTRAINT CK_COURSE_NOTE CHECK (
        NOTECOURSE BETWEEN 0 AND 5
    ),
    CONSTRAINT CK_COURSE_NOTE_IS_NULL CHECK (
        (
            STATUTCOURSE NOT IN ('En cours', 'En attente', 'Annulée')
        )
        OR (
            STATUTCOURSE IN ('En cours', 'En attente', 'Annulée')
            AND NOTECOURSE IS NULL
        )
    ),
    COMMENTAIRECOURSE VARCHAR(1500) NULL,
    POURBOIRE NUMERIC(5, 2) NULL,
    CONSTRAINT CK_POURBOIRE CHECK (
        POURBOIRE >= 0
        OR POURBOIRE = NULL
    ),
    DISTANCE NUMERIC(6, 2) NULL,
    CONSTRAINT CK_COURSE_DISTANCE CHECK (DISTANCE >= 0),
    TEMPS INT4 NULL,
    CONSTRAINT CK_COURSE_TEMPS CHECK (TEMPS >= 0),
    CONSTRAINT PK_COURSE PRIMARY KEY (IDCOURSE)
);
/*==============================================================*/
/* Table : COURSIER                                             */
/*==============================================================*/
CREATE TABLE COURSIER (
    IDCOURSIER INT4 NOT NULL,
    IDENTREPRISE INT4 NOT NULL,
    IDADRESSE INT4 NOT NULL,
    GENREUSER VARCHAR(20) NOT NULL,
    CONSTRAINT CK_COURSIER_GENRE CHECK (GENREUSER IN ('Monsieur', 'Madame')),
    NOMUSER VARCHAR(50) NOT NULL,
    PRENOMUSER VARCHAR(50) NOT NULL,
    DATENAISSANCE DATE NOT NULL,
    CONSTRAINT CK_COURSIER_DATE CHECK (
        DATENAISSANCE <= CURRENT_DATE
        AND DATENAISSANCE <= CURRENT_DATE - INTERVAL '18 years'
    ),
    TELEPHONE VARCHAR(15) NOT NULL,
    CONSTRAINT CK_COURSIER_TEL CHECK (
        (
            TELEPHONE LIKE '06%'
            OR TELEPHONE LIKE '07%'
        )
        AND LENGTH(TELEPHONE) = 10
    ),
    EMAILUSER VARCHAR(200) NOT NULL,
    MOTDEPASSEUSER VARCHAR(200) NOT NULL,
    NUMEROCARTEVTC CHAR(12) NOT NULL,
    CONSTRAINT UQ_COURSIER_NUMCARTE UNIQUE (NUMEROCARTEVTC),
    IBAN VARCHAR(30) NOT NULL,
    CONSTRAINT UQ_COURSIER_IBAN UNIQUE (IBAN),
    DATEDEBUTACTIVITE DATE NOT NULL,
    CONSTRAINT CK_COURSIER_DATE_DEBUT CHECK (DATEDEBUTACTIVITE <= CURRENT_DATE),
    NOTEMOYENNE NUMERIC(2, 1) NULL,
    CONSTRAINT CK_COURSIER_NOTE CHECK (
        NOTEMOYENNE >= 1
        AND NOTEMOYENNE <= 5
        OR NULL
    ),
    CONSTRAINT PK_COURSIER PRIMARY KEY (IDCOURSIER)
);
/*==============================================================*/
/* Table : DEPARTEMENT                                          */
/*==============================================================*/
CREATE TABLE DEPARTEMENT (
    IDDEPARTEMENT INT4 NOT NULL,
    IDPAYS INT4 NOT NULL,
    CODEDEPARTEMENT CHAR(3) NULL,
    LIBELLEDEPARTEMENT VARCHAR(50) NULL,
    CONSTRAINT PK_DEPARTEMENT PRIMARY KEY (IDDEPARTEMENT)
);
/*==============================================================*/
/* Table : ENTREPRISE                                           */
/*==============================================================*/
CREATE TABLE ENTREPRISE (
    IDENTREPRISE INT4 NOT NULL,
    IDADRESSE INT4 NOT NULL,
    SIRETENTREPRISE VARCHAR(20) NOT NULL,
    CONSTRAINT CK_SIRET_ENTREPRISE CHECK (SIRETENTREPRISE ~ '^[0-9]{14}$'),
    NOMENTREPRISE VARCHAR(50) NOT NULL,
    TAILLE VARCHAR(30) NOT NULL,
    CONSTRAINT CK_ENTREPRISE_TAILLE CHECK (TAILLE IN ('PME', 'ETI', 'GE')),
    CONSTRAINT PK_ENTREPRISE PRIMARY KEY (IDENTREPRISE)
);
/*==============================================================*/
/* Table : EST_SITUE_A_2                                        */
/*==============================================================*/
CREATE TABLE EST_SITUE_A_2 (
    IDPRODUIT INT4 NOT NULL,
    IDETABLISSEMENT INT4 NOT NULL,
    CONSTRAINT PK_EST_SITUE_A_2 PRIMARY KEY (IDPRODUIT, IDETABLISSEMENT)
);
/*==============================================================*/
/* Table : ETABLISSEMENT                                        */
/*==============================================================*/
CREATE TABLE ETABLISSEMENT (
    IDETABLISSEMENT INT4 NOT NULL,
    TYPEETABLISSEMENT VARCHAR(50) NOT NULL,
    CONSTRAINT CK_TYPEETABLISSEMENT CHECK (TYPEETABLISSEMENT IN ('Restaurant', 'Épicerie')),
    IDADRESSE INT4 NOT NULL,
    NOMETABLISSEMENT VARCHAR(50) NULL,
    DESCRIPTION VARCHAR(1500) NULL,
    IMAGEETABLISSEMENT VARCHAR(200) NULL,
    LIVRAISON BOOL NULL,
    AEMPORTER BOOL NULL,
    CONSTRAINT PK_ETABLISSEMENT PRIMARY KEY (IDETABLISSEMENT)
);
/*==============================================================*/
/* Table : EVALUATION                                           */
/*==============================================================*/
/* CREATE TABLE EVALUATION (
 IDEVALUATION SERIAL PRIMARY KEY,
 IDCLIENT INT REFERENCES CLIENT(IDCLIENT) ON DELETE CASCADE,
 IDCOURSIER INT REFERENCES COURSIER(IDCOURSIER) ON DELETE CASCADE,
 NOTE NUMERIC(2, 1) NOT NULL CHECK (
 NOTE BETWEEN 0 AND 5
 ),
 COMMENTAIRE VARCHAR(1000),
 DATEEVALUATION DATE NOT NULL DEFAULT CURRENT_DATE
 ); */
/*==============================================================*/
/* Table : HORAIRES                                             */
/*==============================================================*/
CREATE TABLE HORAIRES (
    IDHORAIRES INT4 NOT NULL,
    IDETABLISSEMENT INT4 NOT NULL,
    JOURSEMAINE VARCHAR(9) NOT NULL,
    HORAIRESOUVERTURE TIME WITH TIME ZONE NULL,
    HORAIRESFERMETURE TIME WITH TIME ZONE NULL,
    CONSTRAINT PK_HORAIRES PRIMARY KEY (IDHORAIRES),
    CONSTRAINT CK_JOURSEMAINE CHECK (
        JOURSEMAINE IN (
            'Lundi',
            'Mardi',
            'Mercredi',
            'Jeudi',
            'Vendredi',
            'Samedi',
            'Dimanche'
        )
    )
);
/*==============================================================*/
/* Table : HORAIRES_COURSIER                                    */
/*==============================================================*/
CREATE TABLE HORAIRES_COURSIER (
    IDHORAIRES_COURSIER INT4 NOT NULL,
    IDCOURSIER INT4 NOT NULL,
    JOURSEMAINE VARCHAR(9) NOT NULL,
    HEUREDEBUT TIME WITH TIME ZONE NULL,
    HEUREFIN TIME WITH TIME ZONE NULL,
    CONSTRAINT PK_HORAIRES_COURSIER PRIMARY KEY (IDHORAIRES_COURSIER),
    CONSTRAINT CK_JOURSEMAINE CHECK (
        JOURSEMAINE IN (
            'Lundi',
            'Mardi',
            'Mercredi',
            'Jeudi',
            'Vendredi',
            'Samedi',
            'Dimanche'
        )
    )
);
/*==============================================================*/
/* Table : FACTURE                                       */
/*==============================================================*/
CREATE TABLE FACTURE (
    IDFACTURE INT4 NOT NULL,
    -- CHANGEMENT DE PLACE POUR IDCLIENT
    IDCLIENT INT4 NOT NULL,
    IDCOURSE INT4 NOT NULL,
    IDPAYS INT4 NOT NULL,
    MONTANTREGLEMENT NUMERIC(6, 2) NULL,
    DATEFACTURE DATE NULL,
    CONSTRAINT CK_FACTURE_DATE CHECK (DATEFACTURE <= CURRENT_DATE),
    -- QUANTITE SUPPRIMÉ
    CONSTRAINT PK_FACTURE PRIMARY KEY (IDFACTURE)
);
/*==============================================================*/
/* Table : PANIER                                               */
/*==============================================================*/
CREATE TABLE PANIER (
    IDPANIER INT4 NOT NULL,
    IDCLIENT INT4 NOT NULL,
    PRIX DECIMAL(5, 2) NULL,
    CONSTRAINT CK_PANIER_PRIX CHECK (PRIX >= 0),
    CONSTRAINT PK_PANIER PRIMARY KEY (IDPANIER)
);
/*==============================================================*/
/* Table : PAYS                                                 */
/*==============================================================*/
CREATE TABLE PAYS (
    IDPAYS INT4 NOT NULL,
    NOMPAYS VARCHAR(50) NULL,
    POURCENTAGETVA NUMERIC(4, 2) NULL,
    CONSTRAINT UQ_NOMPAYS UNIQUE (NOMPAYS),
    CONSTRAINT CK_TVA CHECK (
        POURCENTAGETVA >= 0
        AND POURCENTAGETVA < 100
    ),
    CONSTRAINT PK_PAYS PRIMARY KEY (IDPAYS)
);
/*==============================================================*/
/* Table : PLANNING_RESERVATION                                 */
/*==============================================================*/
CREATE TABLE PLANNING_RESERVATION (
    IDPLANNING INT4 NOT NULL,
    IDCLIENT INT4 NOT NULL,
    CONSTRAINT PK_PLANNING_RESERVATION PRIMARY KEY (IDPLANNING)
);
/*==============================================================*/
/* Table : PRODUIT                                              */
/*==============================================================*/
CREATE TABLE PRODUIT (
    IDPRODUIT INT4 NOT NULL,
    NOMPRODUIT VARCHAR(200) NULL,
    PRIXPRODUIT NUMERIC(5, 2) NULL,
    CONSTRAINT CK_PRODUIT_PRIX CHECK (PRIXPRODUIT > 0),
    IMAGEPRODUIT VARCHAR(300) NULL,
    DESCRIPTION VARCHAR(1500) NULL,
    CONSTRAINT PK_PRODUIT PRIMARY KEY (IDPRODUIT)
);
/*==============================================================*/
/* Table : REGLEMENT_SALAIRE                                    */
/*==============================================================*/
CREATE TABLE REGLEMENT_SALAIRE (
    IDREGLEMENT INT4 NOT NULL,
    IDCOURSIER INT4 NOT NULL,
    MONTANTREGLEMENT NUMERIC(6, 2) NULL,
    CONSTRAINT CK_SALAIRE_MNT CHECK (MONTANTREGLEMENT >= 0),
    CONSTRAINT PK_REGLEMENT_SALAIRE PRIMARY KEY (IDREGLEMENT)
);
/*==============================================================*/
/* Table : RESERVATION                                          */
/*==============================================================*/
CREATE TABLE RESERVATION (
    IDRESERVATION INT4 NOT NULL,
    IDCLIENT INT4 NOT NULL,
    IDPLANNING INT4 NOT NULL,
    -- IDVELO : identifiant du vélo réservé supprimé
    DATERESERVATION DATE NOT NULL,
    CONSTRAINT CK_RESERVATION_DATE CHECK (DATERESERVATION <= CURRENT_DATE),
    HEURERESERVATION TIME NOT NULL,
    POURQUI VARCHAR(100) NULL,
    CONSTRAINT CK_RESERVATION_POURQUI CHECK (POURQUI IN ('moi', 'mon ami')),
    CONSTRAINT PK_RESERVATION PRIMARY KEY (IDRESERVATION)
);
/*==============================================================*/
/* Table : RESERVATION_VELO                                     */
/*==============================================================*/
CREATE TABLE RESERVATION_VELO (
    IDRESERVATIONVELO INT4 NOT NULL,
    IDCLIENT INT4 NOT NULL,
    IDPLANNING INT4 NOT NULL,
    IDVELO INT4 NOT NULL,
    DATERESERVATION DATE NOT NULL,
    CONSTRAINT CK_RESERVATION_VELO_DATE CHECK (DATERESERVATION >= CURRENT_DATE),
    HEURERESERVATION TIME NOT NULL,
    STATUT VARCHAR(20) NULL,
    CONSTRAINT CK_RESERVATION_VELO_STATUT CHECK (STATUT IN ('Réservé', 'Annulé')),
    PRIX NUMERIC(6, 2),
    CONSTRAINT CK_RESERVATION_VELO_PRIX CHECK (PRIX >= 0),
    CONSTRAINT PK_RESERVATION_VELO PRIMARY KEY (IDRESERVATIONVELO)
);
/*==============================================================*/
/* Table : TYPE_PRESTATION                                      */
/*==============================================================*/
CREATE TABLE TYPE_PRESTATION (
    IDPRESTATION INT4 NOT NULL,
    LIBELLEPRESTATION VARCHAR(50) NULL,
    DESCRIPTIONPRESTATION VARCHAR(500) NULL,
    IMAGEPRESTATION VARCHAR(300) NULL,
    CONSTRAINT PK_TYPE_PRESTATION PRIMARY KEY (IDPRESTATION)
);
/*==============================================================*/
/* Table : CATEGORIE_PRESTATION                                 */
/*==============================================================*/
CREATE TABLE CATEGORIE_PRESTATION (
    IDCATEGORIEPRESTATION INT4 NOT NULL,
    LIBELLECATEGORIEPRESTATION VARCHAR(50) NULL,
    DESCRIPTIONCATEGORIEPRESTATION VARCHAR(500) NULL,
    IMAGECATEGORIEPRESTATION VARCHAR(300) NULL,
    CONSTRAINT PK_CATEGORIE_PRESTATION PRIMARY KEY (IDCATEGORIEPRESTATION)
);
/*==============================================================*/
/* Table : A_COMME_CATEGORIE                                    */
/*==============================================================*/
CREATE TABLE A_COMME_CATEGORIE (
    IDCATEGORIEPRESTATION INT4 NOT NULL,
    IDETABLISSEMENT INT4 NOT NULL,
    CONSTRAINT PK_A_COMME_CATEGORIE PRIMARY KEY (IDCATEGORIEPRESTATION, IDETABLISSEMENT)
);
/*==============================================================*/
/* Table : VEHICULE                                             */
/*==============================================================*/
CREATE TABLE VEHICULE (
    IDVEHICULE INT4 NOT NULL,
    IDCOURSIER INT4 NOT NULL,
    IMMATRICULATION CHAR(9) NOT NULL,
    CONSTRAINT CK_VEHICULE_IMMATRICULATION CHECK (IMMATRICULATION ~ '^[A-Z]{2}-[0-9]{3}-[A-Z]{2}$'),
    CONSTRAINT UQ_VEHICULE_IMMATRICULATION UNIQUE (IMMATRICULATION),
    MARQUE VARCHAR(50) NULL,
    MODELE VARCHAR(50) NULL,
    CAPACITE INT4 NULL,
    CONSTRAINT CK_VEHICULE_CAPACITE CHECK (
        CAPACITE BETWEEN 2 AND 7
    ),
    ACCEPTEANIMAUX BOOL NOT NULL,
    ESTELECTRIQUE BOOL NOT NULL,
    ESTCONFORTABLE BOOL NOT NULL,
    ESTRECENT BOOL NOT NULL,
    ESTLUXUEUX BOOL NOT NULL,
    COULEUR VARCHAR(20) NULL,
    CONSTRAINT PK_VEHICULE PRIMARY KEY (IDVEHICULE)
);
/*==============================================================*/
/* Table : VELO                                                 */
/*==============================================================*/
CREATE TABLE VELO (
    IDVELO INT4 NOT NULL,
    IDADRESSE INT4 NOT NULL,
    NUMEROVELO INT4 NOT NULL,
    CONSTRAINT UQ_VELO_NUMERO UNIQUE (NUMEROVELO),
    ESTDISPONIBLE BOOL NOT NULL,
    CONSTRAINT PK_VELO PRIMARY KEY (IDVELO)
);
/*==============================================================*/
/* Table : VILLE                                                */
/*==============================================================*/
CREATE TABLE VILLE (
    IDVILLE INT4 NOT NULL,
    IDPAYS INT4 NULL,
    IDCODEPOSTAL INT4 NULL,
    NOMVILLE VARCHAR(50) NULL,
    CONSTRAINT PK_VILLE PRIMARY KEY (IDVILLE)
);
------------------------------------------------------------------------------------------------------------------------------------------------------
-- TABLE : ADRESSE
ALTER TABLE ADRESSE
ADD CONSTRAINT FK_ADRESSE_VILLE FOREIGN KEY (IDVILLE) REFERENCES VILLE (IDVILLE) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : APPARTIENT_2
ALTER TABLE APPARTIENT_2
ADD CONSTRAINT FK_APPARTIENT_2_CARTE_BANCAIRE FOREIGN KEY (IDCB) REFERENCES CARTE_BANCAIRE (IDCB) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE APPARTIENT_2
ADD CONSTRAINT FK_APPARTIENT_2_CLIENT FOREIGN KEY (IDCLIENT) REFERENCES CLIENT (IDCLIENT) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : A_3
ALTER TABLE A_3
ADD CONSTRAINT FK_A_3_PRODUIT FOREIGN KEY (IDPRODUIT) REFERENCES PRODUIT (IDPRODUIT) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE A_3
ADD CONSTRAINT FK_A_3_CATEGORIE FOREIGN KEY (IDCATEGORIE) REFERENCES CATEGORIE_PRODUIT (IDCATEGORIE) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : A_COMME_TYPE
ALTER TABLE A_COMME_TYPE
ADD CONSTRAINT FK_A_COMME_TYPE_VEHICULE FOREIGN KEY (IDVEHICULE) REFERENCES VEHICULE (IDVEHICULE) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE A_COMME_TYPE
ADD CONSTRAINT FK_A_COMME_TYPE_PRESTATION FOREIGN KEY (IDPRESTATION) REFERENCES TYPE_PRESTATION (IDPRESTATION) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : CLIENT
ALTER TABLE CLIENT
ADD CONSTRAINT FK_CLIENT_ENTREPRISE FOREIGN KEY (IDENTREPRISE) REFERENCES ENTREPRISE (IDENTREPRISE) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE CLIENT
ADD CONSTRAINT FK_CLIENT_ADRESSE FOREIGN KEY (IDADRESSE) REFERENCES ADRESSE (IDADRESSE) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : CODE_POSTAL
ALTER TABLE CODE_POSTAL
ADD CONSTRAINT FK_CODE_POSTAL_PAYS FOREIGN KEY (IDPAYS) REFERENCES PAYS (IDPAYS) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : COMMANDE
ALTER TABLE COMMANDE
ADD CONSTRAINT FK_COMMANDE_COURSIER FOREIGN KEY (IDCOURSIER) REFERENCES COURSIER (IDCOURSIER) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE COMMANDE
ADD CONSTRAINT FK_COMMANDE_PANIER FOREIGN KEY (IDPANIER) REFERENCES PANIER (IDPANIER) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : CONTIENT_2
ALTER TABLE CONTIENT_2
ADD CONSTRAINT FK_CONTIENT_2_PANIER FOREIGN KEY (IDPANIER) REFERENCES PANIER (IDPANIER) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE CONTIENT_2
ADD CONSTRAINT FK_CONTIENT_2_PRODUIT FOREIGN KEY (IDPRODUIT) REFERENCES PRODUIT (IDPRODUIT) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : COURSE
ALTER TABLE COURSE
ADD CONSTRAINT FK_COURSE_PRESTATION FOREIGN KEY (IDPRESTATION) REFERENCES TYPE_PRESTATION (IDPRESTATION) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE COURSE
ADD CONSTRAINT FK_COURSE_ADRESSE_START FOREIGN KEY (ADR_IDADRESSE) REFERENCES ADRESSE (IDADRESSE) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE COURSE
ADD CONSTRAINT FK_COURSE_RESERVATION FOREIGN KEY (IDRESERVATION) REFERENCES RESERVATION (IDRESERVATION) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE COURSE
ADD CONSTRAINT FK_COURSE_ADRESSE_END FOREIGN KEY (IDADRESSE) REFERENCES ADRESSE (IDADRESSE) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE COURSE
ADD CONSTRAINT FK_COURSE_CARTE_BANCAIRE FOREIGN KEY (IDCB) REFERENCES CARTE_BANCAIRE (IDCB) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE COURSE
ADD CONSTRAINT FK_COURSE_COURSIER FOREIGN KEY (IDCOURSIER) REFERENCES COURSIER (IDCOURSIER) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : COURSIER
ALTER TABLE COURSIER
ADD CONSTRAINT FK_COURSIER_ENTREPRISE FOREIGN KEY (IDENTREPRISE) REFERENCES ENTREPRISE (IDENTREPRISE) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE COURSIER
ADD CONSTRAINT FK_COURSIER_ADRESSE FOREIGN KEY (IDADRESSE) REFERENCES ADRESSE (IDADRESSE) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : DEPARTEMENT
ALTER TABLE DEPARTEMENT
ADD CONSTRAINT FK_DEPARTEMENT_PAYS FOREIGN KEY (IDPAYS) REFERENCES PAYS (IDPAYS) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : ENTREPRISE
ALTER TABLE ENTREPRISE
ADD CONSTRAINT FK_ENTREPRISE_ADRESSE FOREIGN KEY (IDADRESSE) REFERENCES ADRESSE (IDADRESSE) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : EST_SITUE_A_2
ALTER TABLE EST_SITUE_A_2
ADD CONSTRAINT FK_EST_SITUE_A_2_PRODUIT FOREIGN KEY (IDPRODUIT) REFERENCES PRODUIT (IDPRODUIT) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE EST_SITUE_A_2
ADD CONSTRAINT FK_EST_SITUE_A_2_ETABLISSEMENT FOREIGN KEY (IDETABLISSEMENT) REFERENCES ETABLISSEMENT (IDETABLISSEMENT) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : A_COMME_CATEGORIE
ALTER TABLE A_COMME_CATEGORIE
ADD CONSTRAINT FK_A_COMME_CATEGORIE_PRESTATION FOREIGN KEY (IDCATEGORIEPRESTATION) REFERENCES CATEGORIE_PRESTATION (IDCATEGORIEPRESTATION) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE A_COMME_CATEGORIE
ADD CONSTRAINT FK_A_COMME_CATEGORIE_ETABLISSEMENT FOREIGN KEY (IDETABLISSEMENT) REFERENCES ETABLISSEMENT (IDETABLISSEMENT) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : ETABLISSEMENT
ALTER TABLE ETABLISSEMENT
ADD CONSTRAINT FK_ETABLISSEMENT_ADRESSE FOREIGN KEY (IDADRESSE) REFERENCES ADRESSE (IDADRESSE) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : HORAIRES
ALTER TABLE HORAIRES
ADD CONSTRAINT FK_HORAIRES_ETABLISSEMENT FOREIGN KEY (IDETABLISSEMENT) REFERENCES ETABLISSEMENT (IDETABLISSEMENT) ON DELETE CASCADE ON UPDATE CASCADE;
-- TABLE : HORAIRES_COURSIER
ALTER TABLE HORAIRES_COURSIER
ADD CONSTRAINT FK_HORAIRES_COURSIER_COURSIER FOREIGN KEY (IDCOURSIER) REFERENCES COURSIER (IDCOURSIER) ON DELETE CASCADE ON UPDATE CASCADE;
-- TABLE : FACTURE
ALTER TABLE FACTURE
ADD CONSTRAINT FK_FACTURE_COURSE FOREIGN KEY (IDCOURSE) REFERENCES COURSE (IDCOURSE) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE FACTURE
ADD CONSTRAINT FK_FACTURE_CLIENT FOREIGN KEY (IDCLIENT) REFERENCES CLIENT (IDCLIENT) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE FACTURE
ADD CONSTRAINT FK_FACTURE_PAYS FOREIGN KEY (IDPAYS) REFERENCES PAYS (IDPAYS) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : PANIER
ALTER TABLE PANIER
ADD CONSTRAINT FK_PANIER_CLIENT FOREIGN KEY (IDCLIENT) REFERENCES CLIENT (IDCLIENT) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : PLANNING_RESERVATION
ALTER TABLE PLANNING_RESERVATION
ADD CONSTRAINT FK_PLANNING_RESERVATION_CLIENT FOREIGN KEY (IDCLIENT) REFERENCES CLIENT (IDCLIENT) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : REGLEMENT_SALAIRE
ALTER TABLE REGLEMENT_SALAIRE
ADD CONSTRAINT FK_REGLEMENT_SALAIRE_COURSIER FOREIGN KEY (IDCOURSIER) REFERENCES COURSIER (IDCOURSIER) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : RESERVATION
ALTER TABLE RESERVATION
ADD CONSTRAINT FK_RESERVATION_PLANNING FOREIGN KEY (IDPLANNING) REFERENCES PLANNING_RESERVATION (IDPLANNING) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : RESERVATION_VELO
ALTER TABLE RESERVATION_VELO
ADD CONSTRAINT FK_RESERVATION_VELO_CLIENT FOREIGN KEY (IDCLIENT) REFERENCES CLIENT (IDCLIENT) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : VEHICULE
ALTER TABLE VEHICULE
ADD CONSTRAINT FK_VEHICULE_COURSIER FOREIGN KEY (IDCOURSIER) REFERENCES COURSIER (IDCOURSIER) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : VELO
ALTER TABLE VELO
ADD CONSTRAINT FK_VELO_ADRESSE FOREIGN KEY (IDADRESSE) REFERENCES ADRESSE (IDADRESSE) ON DELETE RESTRICT ON UPDATE RESTRICT;
-- TABLE : VILLE
ALTER TABLE VILLE
ADD CONSTRAINT FK_VILLE_CODE_POSTAL FOREIGN KEY (IDCODEPOSTAL) REFERENCES CODE_POSTAL (IDCODEPOSTAL) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE VILLE
ADD CONSTRAINT FK_VILLE_PAYS FOREIGN KEY (IDPAYS) REFERENCES PAYS (IDPAYS) ON DELETE RESTRICT ON UPDATE RESTRICT;