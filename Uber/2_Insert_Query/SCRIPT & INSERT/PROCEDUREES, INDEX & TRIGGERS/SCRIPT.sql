/*==============================================================*/
/* Nom de SGBD :  PostgreSQL 8                                  */
/* Date de création :  01/01/2001                               */
SET TIMEZONE = 'Europe/Paris';
/*==============================================================*/
DROP TABLE IF EXISTS ADRESSE CASCADE;
DROP TABLE IF EXISTS PRODUIT_CATEGORIE CASCADE;
DROP TABLE IF EXISTS A_COMME_CATEGORIE CASCADE;
DROP TABLE IF EXISTS A_COMME_TYPE CASCADE;
DROP TABLE IF EXISTS CARTE_BANCAIRE CASCADE;
DROP TABLE IF EXISTS CATEGORIE_PRESTATION CASCADE;
DROP TABLE IF EXISTS CATEGORIE_PRODUIT CASCADE;
DROP TABLE IF EXISTS CLIENT CASCADE;
DROP TABLE IF EXISTS CLIENT_CARTE CASCADE;
DROP TABLE IF EXISTS CODE_POSTAL CASCADE;
DROP TABLE IF EXISTS COMMANDE CASCADE;
DROP TABLE IF EXISTS CONTIENT_2 CASCADE;
DROP TABLE IF EXISTS COURSE CASCADE;
DROP TABLE IF EXISTS COURSIER CASCADE;
DROP TABLE IF EXISTS ENTREPRISE CASCADE;
DROP TABLE IF EXISTS ENTRETIEN CASCADE;
DROP TABLE IF EXISTS EST_SITUE_A_2 CASCADE;
DROP TABLE IF EXISTS ETABLISSEMENT CASCADE;
DROP TABLE IF EXISTS FACTURE CASCADE;
DROP TABLE IF EXISTS GESTION_ETABLISSEMENT CASCADE;
DROP TABLE IF EXISTS HORAIRES CASCADE;
DROP TABLE IF EXISTS LIEU_FAVORI CASCADE;
DROP TABLE IF EXISTS LIVREUR CASCADE;
DROP TABLE IF EXISTS OTP CASCADE;
DROP TABLE IF EXISTS PANIER CASCADE;
DROP TABLE IF EXISTS PAYS CASCADE;
DROP TABLE IF EXISTS PRODUIT CASCADE;
DROP TABLE IF EXISTS REGLEMENT_SALAIRE CASCADE;
DROP TABLE IF EXISTS RESERVATION CASCADE;
DROP TABLE IF EXISTS RESPONSABLE_ENSEIGNE CASCADE;
DROP TABLE IF EXISTS RESTAURATEUR CASCADE;
DROP TABLE IF EXISTS TYPE_PRESTATION CASCADE;
DROP TABLE IF EXISTS VEHICULE CASCADE;
DROP TABLE IF EXISTS VELO CASCADE;
DROP TABLE IF EXISTS VELO_RESERVATION CASCADE;
DROP TABLE IF EXISTS VILLE CASCADE;
/*==============================================================*/
/* Table : ADRESSE                                              */
/*==============================================================*/
CREATE TABLE ADRESSE (
    IDADRESSE INT4 NOT NULL,
    IDVILLE INT4 NULL,
    LIBELLEADRESSE VARCHAR(100) NOT NULL,
    CONSTRAINT PK_ADRESSE PRIMARY KEY (IDADRESSE)
);
/*==============================================================*/
/* Table : CLIENT_CARTE                                         */
/*==============================================================*/
CREATE TABLE CLIENT_CARTE (
    IDCB INT4 NOT NULL,
    IDCLIENT INT4 NOT NULL,
    CONSTRAINT PK_CLIENT_CARTE PRIMARY KEY (IDCB, IDCLIENT)
);
/*==============================================================*/
/* Table : PRODUIT_CATEGORIE                                    */
/*==============================================================*/
CREATE TABLE PRODUIT_CATEGORIE (
    IDPRODUIT INT4 NOT NULL,
    IDCATEGORIE INT4 NOT NULL,
    CONSTRAINT PK_PRODUIT_CATEGORIE PRIMARY KEY (IDPRODUIT, IDCATEGORIE)
);
/*==============================================================*/
/* Table : A_COMME_TYPE                                         */
/*==============================================================*/
CREATE TABLE A_COMME_TYPE (
    IDVEHICULE INT4 NOT NULL,
    IDPRESTATION INT4 NOT NULL,
    CONSTRAINT PK_A_COMME_TYPE PRIMARY KEY (IDVEHICULE, IDPRESTATION)
);
/*==============================================================*/
/* Table : CARTE_BANCAIRE                                       */
/*==============================================================*/
CREATE TABLE CARTE_BANCAIRE (
    IDCB INT4 NOT NULL,
    NUMEROCB TEXT NOT NULL UNIQUE,
    DATEEXPIRECB DATE NOT NULL,
    CONSTRAINT CK_CB_DATEEXPIRE CHECK (DATEEXPIRECB >= CURRENT_DATE),
    CRYPTOGRAMME TEXT NOT NULL,
    TYPECARTE VARCHAR(30) NOT NULL,
    CONSTRAINT CK_TYPECARTE CHECK (TYPECARTE IN ('Crédit', 'Débit')),
    TYPERESEAUX VARCHAR(30) NOT NULL,
    CONSTRAINT CK_TYPERESEAUX CHECK (
        TYPERESEAUX IN ('Visa', 'MasterCard', 'Amex', 'Discover')
    ),
    CONSTRAINT PK_CARTE_BANCAIRE PRIMARY KEY (IDCB)
);
/*==============================================================*/
/* Table : CATEGORIE_PRODUIT                                    */
/*==============================================================*/
CREATE TABLE CATEGORIE_PRODUIT (
    IDCATEGORIE INT4 NOT NULL,
    NOMCATEGORIE VARCHAR(100) NULL,
    CONSTRAINT PK_CATEGORIE_PRODUIT PRIMARY KEY (IDCATEGORIE)
);
/*==============================================================*/
/* Table : CLIENT                                               */
/*==============================================================*/
CREATE TABLE CLIENT (
    IDCLIENT INT4 NOT NULL,
    IDENTREPRISE INT4 NULL,
    IDADRESSE INT4 NULL,
    GENREUSER VARCHAR(20) NOT NULL,
    CONSTRAINT CK_CLIENT_GENRE CHECK (GENREUSER IN ('Monsieur', 'Madame')),
    NOMUSER VARCHAR(50) NOT NULL,
    PRENOMUSER VARCHAR(50) NOT NULL,
    DATENAISSANCE DATE NOT NULL,
    CONSTRAINT CK_DATE_NAISS CHECK (
        DATENAISSANCE <= CURRENT_DATE
        AND DATENAISSANCE <= CURRENT_DATE - INTERVAL '18 years'
    ),
    TELEPHONE VARCHAR(20) NOT NULL,
    CONSTRAINT CK_CLIENT_TEL CHECK (
        TELEPHONE ~ '^(06|07)[0-9]{8}$'
        OR TELEPHONE ~ '^\+?[1-9][0-9]{1,14}$'
    ),
    EMAILUSER VARCHAR(200) NOT NULL,
    CONSTRAINT UQ_CLIENT_MAIL UNIQUE (EMAILUSER),
    CONSTRAINT CK_CLIENT_EMAIL_FORMAT CHECK (
        EMAILUSER ~ '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    ),
    MOTDEPASSEUSER VARCHAR(200) NOT NULL,
    PHOTOPROFILE VARCHAR(300) NULL,
    SOUHAITERECEVOIRBONPLAN BOOLEAN NULL,
    MFA_ACTIVEE BOOLEAN DEFAULT FALSE,
    TYPECLIENT VARCHAR(20) NOT NULL,
    CONSTRAINT CK_TYPECLIENT CHECK (TYPECLIENT IN ('Uber', 'Uber Eats')),
    LAST_CONNEXION TIMESTAMP DEFAULT NOW(),
    DEMANDE_SUPPRESSION BOOLEAN DEFAULT FALSE,
    CONSTRAINT PK_CLIENT PRIMARY KEY (IDCLIENT)
);
/*==============================================================*/
/* Table : OTP                                                  */
/*==============================================================*/
CREATE TABLE OTP (
    IDOTP INT4 NOT NULL,
    IDCLIENT INT4 NOT NULL,
    CODEOTP CHAR(6) NOT NULL,
    DATEGENERATION TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DATEEXPIRATION TIMESTAMP NOT NULL,
    UTILISE BOOLEAN DEFAULT FALSE,
    CONSTRAINT PK_OTP PRIMARY KEY (IDOTP)
);
/*==============================================================*/
/* Table : CODE_POSTAL                                          */
/*==============================================================*/
CREATE TABLE CODE_POSTAL (
    IDCODEPOSTAL INT4 NOT NULL,
    IDPAYS INT4 NULL,
    CODEPOSTAL CHAR(5) NOT NULL,
    CONSTRAINT UQ_CODEPOSTAL UNIQUE (CODEPOSTAL),
    CONSTRAINT PK_CODE_POSTAL PRIMARY KEY (IDCODEPOSTAL)
);
/*==============================================================*/
/* Table : COMMANDE                                             */
/*==============================================================*/
CREATE TABLE COMMANDE (
    IDCOMMANDE INT4 NOT NULL,
    IDPANIER INT4 NOT NULL,
    IDLIVREUR INT4 NULL,
    IDCB INT4 NULL,
    IDADRESSE INT4 NOT NULL,
    PRIXCOMMANDE DECIMAL(5, 2) NOT NULL,
    CONSTRAINT CK_COMMANDE_PRIX CHECK (PRIXCOMMANDE >= 0),
    TEMPSCOMMANDE INT4 NOT NULL,
    CONSTRAINT CK_TEMPS_COMMANDE CHECK (TEMPSCOMMANDE >= 0),
    HEURECREATION TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    HEURECOMMANDE TIMESTAMP NOT NULL,
    ESTLIVRAISON BOOLEAN NOT NULL DEFAULT FALSE,
    STATUTCOMMANDE VARCHAR(40) NOT NULL,
    CONSTRAINT CK_STATUT_COMMANDE CHECK (
        STATUTCOMMANDE IN (
            'En attente de paiement',
            'Paiement validé',
            'En cours',
            'Livrée',
            'Annulée',
            'Refusée',
            'Remboursée'
        )
    ),
    REFUS_DEMANDEE BOOLEAN NOT NULL DEFAULT FALSE,
    REMBOURSEMENT_EFFECTUE BOOLEAN NOT NULL DEFAULT FALSE,
    CONSTRAINT PK_COMMANDE PRIMARY KEY (IDCOMMANDE)
);
/*==============================================================*/
/* Table : CONTIENT_2                                           */
/*==============================================================*/
CREATE TABLE CONTIENT_2 (
    IDPANIER INT4 NOT NULL,
    IDPRODUIT INT4 NOT NULL,
    IDETABLISSEMENT INT4 NOT NULL,
    QUANTITE INT4 NOT NULL DEFAULT 1,
    CONSTRAINT PK_CONTIENT_2 PRIMARY KEY (IDPANIER, IDPRODUIT)
);
/*==============================================================*/
/* Table : COURSE                                               */
/*==============================================================*/
CREATE TABLE COURSE (
    IDCOURSE INT4 NOT NULL,
    IDCOURSIER INT4 NULL,
    IDCB INT4 NOT NULL,
    IDADRESSE INT4 NOT NULL,
    IDRESERVATION INT4 NOT NULL,
    ADR_IDADRESSE INT4 NOT NULL,
    IDPRESTATION INT4 NOT NULL,
    DATECOURSE DATE NOT NULL,
    HEURECOURSE TIME NOT NULL,
    PRIXCOURSE NUMERIC(8, 2) NOT NULL,
    CONSTRAINT CK_COURSE_PRIX CHECK (PRIXCOURSE >= 0),
    STATUTCOURSE VARCHAR(20) NOT NULL,
    CONSTRAINT CK_COURSE_STATUT CHECK (
        STATUTCOURSE IN (
            'En attente',
            'Réservée',
            'En cours',
            'Terminée',
            'Annulée'
        )
    ),
    NOTECOURSE NUMERIC(2, 1) NULL,
    CONSTRAINT CK_COURSE_NOTE CHECK (
        NOTECOURSE BETWEEN 0 AND 5
        OR NOTECOURSE IS NULL
    ),
    COMMENTAIRECOURSE VARCHAR(1500) NULL,
    POURBOIRE NUMERIC(8, 2) NULL,
    CONSTRAINT CK_COURSE_POURBOIRE CHECK (
        POURBOIRE IS NULL
        OR POURBOIRE >= 0
    ),
    DISTANCE NUMERIC(8, 2) NULL,
    CONSTRAINT CK_COURSE_DISTANCE CHECK (
        DISTANCE IS NULL
        OR DISTANCE >= 0
    ),
    TEMPS INT NULL,
    CONSTRAINT CK_COURSE_TEMPS CHECK (
        TEMPS IS NULL
        OR TEMPS >= 0
    ),
    CONSTRAINT CK_COURSE_NOTE_IS_NULL CHECK (
        STATUTCOURSE <> 'Terminée'
        AND NOTECOURSE IS NULL
        OR STATUTCOURSE = 'Terminée'
    ),
    CONSTRAINT PK_COURSE PRIMARY KEY (IDCOURSE)
);
/*==============================================================*/
/* Table : COURSIER                                             */
/*==============================================================*/
CREATE TABLE COURSIER (
    IDCOURSIER INT4 NOT NULL,
    IDENTREPRISE INT4 NOT NULL,
    IDADRESSE INT4 NULL,
    GENREUSER VARCHAR(20) NOT NULL,
    CONSTRAINT CK_COURSIER_GENRE CHECK (GENREUSER IN ('Monsieur', 'Madame')),
    NOMUSER VARCHAR(50) NOT NULL,
    PRENOMUSER VARCHAR(50) NOT NULL,
    DATENAISSANCE DATE NOT NULL,
    CONSTRAINT CK_COURSIER_DATE CHECK (
        DATENAISSANCE <= CURRENT_DATE
        AND DATENAISSANCE <= CURRENT_DATE - INTERVAL '18 years'
    ),
    TELEPHONE VARCHAR(20) NOT NULL,
    CONSTRAINT CK_COURSIER_TEL CHECK (
        TELEPHONE ~ '^(06|07)[0-9]{8}$'
        OR TELEPHONE ~ '^\+?[1-9][0-9]{1,14}$'
    ),
    EMAILUSER VARCHAR(200) NOT NULL,
    CONSTRAINT UQ_COURSIER_MAIL UNIQUE (EMAILUSER),
    CONSTRAINT CK_CLIENT_EMAIL_FORMAT CHECK (
        EMAILUSER ~ '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    ),
    MOTDEPASSEUSER VARCHAR(200) NOT NULL,
    NUMEROCARTEVTC CHAR(12) NOT NULL,
    CONSTRAINT CK_COURSIER_NUMCARTE_SIZE CHECK (LENGTH(NUMEROCARTEVTC) = 12),
    CONSTRAINT UQ_COURSIER_NUMCARTE UNIQUE (NUMEROCARTEVTC),
    IBAN VARCHAR(30) NULL,
    CONSTRAINT UQ_COURSIER_IBAN UNIQUE (IBAN),
    DATEDEBUTACTIVITE DATE NULL,
    NOTEMOYENNE NUMERIC(2, 1) NULL,
    CONSTRAINT CK_COURSIER_NOTE CHECK (
        NOTEMOYENNE >= 1
        AND NOTEMOYENNE <= 5
        OR NULL
    ),
    CONSTRAINT PK_COURSIER PRIMARY KEY (IDCOURSIER)
);
/*==============================================================*/
/* Table : ENTREPRISE                                           */
/*==============================================================*/
CREATE TABLE ENTREPRISE (
    IDENTREPRISE INT4 NOT NULL,
    IDADRESSE INT4 NOT NULL,
    SIRETENTREPRISE VARCHAR(20) NOT NULL,
    CONSTRAINT CK_SIRET_ENTREPRISE CHECK (SIRETENTREPRISE ~ '^[0-9]{14}$'),
    NOMENTREPRISE VARCHAR(50) NOT NULL,
    TAILLE VARCHAR(30) NOT NULL,
    CONSTRAINT CK_ENTREPRISE_TAILLE CHECK (TAILLE IN ('PME', 'ETI', 'GE')),
    CONSTRAINT PK_ENTREPRISE PRIMARY KEY (IDENTREPRISE)
);
/*==============================================================*/
/* Table : ENTRETIEN                                            */
/*==============================================================*/
CREATE TABLE ENTRETIEN (
    IDENTRETIEN INT4 NOT NULL,
    IDCOURSIER INT4 NOT NULL,
    DATEENTRETIEN TIMESTAMP NULL,
    STATUS VARCHAR(20) NOT NULL DEFAULT 'En attente',
    RESULTAT VARCHAR(20) NULL,
    RDVLOGISTIQUEDATE TIMESTAMP NULL,
    RDVLOGISTIQUELIEU VARCHAR(255) NULL,
    /* CONSTRAINT CK_DATEENTRETIEN CHECK (
     DATEENTRETIEN >= CURRENT_DATE
     OR DATEENTRETIEN IS NULL
     ), */
    CONSTRAINT CK_STATUS_ENTRETIEN CHECK (
        STATUS IN ('En attente', 'Planifié', 'Terminée', 'Annulée')
    ),
    CONSTRAINT CK_RESULTAT_ENTRETIEN CHECK (
        RESULTAT IN ('Retenu', 'Rejeté')
        OR RESULTAT IS NULL
    ),
    /*     CONSTRAINT CK_RDVLOGISTIQUEDATE CHECK (
     RDVLOGISTIQUEDATE >= CURRENT_DATE
     OR RDVLOGISTIQUEDATE IS NULL
     ), */
    CONSTRAINT PK_ENTRETIEN PRIMARY KEY (IDENTRETIEN)
);
/*==============================================================*/
/* Table : EST_SITUE_A_2                                        */
/*==============================================================*/
CREATE TABLE EST_SITUE_A_2 (
    IDPRODUIT INT4 NOT NULL,
    IDETABLISSEMENT INT4 NOT NULL,
    CONSTRAINT PK_EST_SITUE_A_2 PRIMARY KEY (IDPRODUIT, IDETABLISSEMENT)
);
/*==============================================================*/
/* Table : ETABLISSEMENT                                        */
/*==============================================================*/
CREATE TABLE ETABLISSEMENT (
    IDETABLISSEMENT INT4 NOT NULL,
    IDRESTAURATEUR INT4 NOT NULL,
    TYPEETABLISSEMENT VARCHAR(50) NOT NULL,
    CONSTRAINT CK_TYPEETABLISSEMENT CHECK (TYPEETABLISSEMENT IN ('Restaurant', 'Épicerie')),
    IDADRESSE INT4 NOT NULL,
    NOMETABLISSEMENT VARCHAR(50) NULL,
    DESCRIPTION VARCHAR(1500) NULL,
    IMAGEETABLISSEMENT VARCHAR(200) NULL,
    LIVRAISON BOOLEAN NULL,
    AEMPORTER BOOLEAN NULL,
    CONSTRAINT PK_ETABLISSEMENT PRIMARY KEY (IDETABLISSEMENT)
);
/*==============================================================*/
/* Table : HORAIRES                                             */
/*==============================================================*/
CREATE TABLE HORAIRES (
    IDHORAIRES INT4 NOT NULL,
    IDETABLISSEMENT INT4 NULL,
    IDCOURSIER INT4 NULL,
    IDLIVREUR INT4 NULL,
    JOURSEMAINE VARCHAR(9) NOT NULL,
    HEUREDEBUT TIME WITH TIME ZONE NULL,
    HEUREFIN TIME WITH TIME ZONE NULL,
    CONSTRAINT CK_JOURSEMAINE CHECK (
        JOURSEMAINE IN (
            'Lundi',
            'Mardi',
            'Mercredi',
            'Jeudi',
            'Vendredi',
            'Samedi',
            'Dimanche'
        )
    ),
    CONSTRAINT PK_HORAIRES PRIMARY KEY (IDHORAIRES)
);
/*==============================================================*/
/* Table : FACTURE                                              */
/*==============================================================*/
CREATE TABLE FACTURE (
    IDFACTURE INT4 NOT NULL,
    IDRESERVATION INT4 NULL,
    IDCOMMANDE INT4 NULL,
    IDPAYS INT4 NOT NULL,
    IDCLIENT INT4 NOT NULL,
    MONTANTREGLEMENT NUMERIC(5, 2) NULL,
    DATEFACTURE DATE NULL,
    CONSTRAINT CK_FACTURE_DATE CHECK (DATEFACTURE <= CURRENT_DATE),
    QUANTITE INT4 NULL,
    CONSTRAINT PK_FACTURE PRIMARY KEY (IDFACTURE)
);
/*==============================================================*/
/* Table : LIEU_FAVORI                                          */
/*==============================================================*/
CREATE TABLE LIEU_FAVORI (
    IDLIEUFAVORI INT4 NOT NULL,
    IDCLIENT INT4 NOT NULL,
    IDADRESSE INT4 NOT NULL,
    NOMLIEU VARCHAR(100) NOT NULL,
    CONSTRAINT PK_LIEU_FAVORI PRIMARY KEY (IDLIEUFAVORI)
);
/*==============================================================*/
/* Table : LIVREUR                                              */
/*==============================================================*/
CREATE TABLE LIVREUR (
    IDLIVREUR INT4 NOT NULL,
    IDENTREPRISE INT4 NOT NULL,
    IDADRESSE INT4 NULL,
    GENREUSER VARCHAR(20) NOT NULL,
    CONSTRAINT CK_LIVREUR_GENRE CHECK (GENREUSER IN ('Monsieur', 'Madame')),
    NOMUSER VARCHAR(50) NOT NULL,
    PRENOMUSER VARCHAR(50) NOT NULL,
    DATENAISSANCE DATE NOT NULL,
    CONSTRAINT CK_LIVREUR_DATE CHECK (
        DATENAISSANCE <= CURRENT_DATE
        AND DATENAISSANCE <= CURRENT_DATE - INTERVAL '18 years'
    ),
    TELEPHONE VARCHAR(20) NOT NULL,
    CONSTRAINT CK_LIVREUR_TEL CHECK (
        TELEPHONE ~ '^(06|07)[0-9]{8}$'
        OR TELEPHONE ~ '^\+?[1-9][0-9]{1,14}$'
    ),
    EMAILUSER VARCHAR(200) NOT NULL,
    CONSTRAINT UQ_LIVREUR_MAIL UNIQUE (EMAILUSER),
    CONSTRAINT CK_CLIENT_EMAIL_FORMAT CHECK (
        EMAILUSER ~ '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    ),
    MOTDEPASSEUSER VARCHAR(200) NOT NULL,
    IBAN VARCHAR(30) NULL,
    CONSTRAINT UQ_LIVREUR_IBAN UNIQUE (IBAN),
    DATEDEBUTACTIVITE DATE NULL,
    NOTEMOYENNE NUMERIC(2, 1) NULL,
    CONSTRAINT CK_LIVREUR_NOTE CHECK (
        NOTEMOYENNE >= 1
        AND NOTEMOYENNE <= 5
        OR NOTEMOYENNE IS NULL
    ),
    CONSTRAINT PK_LIVREUR PRIMARY KEY (IDLIVREUR)
);
/*==============================================================*/
/* Table : PANIER                                               */
/*==============================================================*/
CREATE TABLE PANIER (
    IDPANIER INT4 NOT NULL,
    IDCLIENT INT4 NOT NULL,
    PRIX DECIMAL(5, 2) NULL,
    CONSTRAINT CK_PANIER_PRIX CHECK (PRIX >= 0),
    CONSTRAINT PK_PANIER PRIMARY KEY (IDPANIER)
);
/*==============================================================*/
/* Table : PAYS                                                 */
/*==============================================================*/
CREATE TABLE PAYS (
    IDPAYS INT4 NOT NULL,
    NOMPAYS VARCHAR(50) NOT NULL,
    POURCENTAGETVA NUMERIC(4, 2) NULL,
    CONSTRAINT UQ_NOMPAYS UNIQUE (NOMPAYS),
    CONSTRAINT CK_TVA CHECK (
        POURCENTAGETVA >= 0
        AND POURCENTAGETVA < 100
    ),
    CONSTRAINT PK_PAYS PRIMARY KEY (IDPAYS)
);
/*==============================================================*/
/* Table : PRODUIT                                              */
/*==============================================================*/
CREATE TABLE PRODUIT (
    IDPRODUIT INT4 NOT NULL,
    NOMPRODUIT VARCHAR(200) NULL,
    PRIXPRODUIT NUMERIC(5, 2) NULL,
    CONSTRAINT CK_PRODUIT_PRIX CHECK (PRIXPRODUIT > 0),
    IMAGEPRODUIT VARCHAR(300) NULL,
    DESCRIPTION VARCHAR(1500) NULL,
    CONSTRAINT PK_PRODUIT PRIMARY KEY (IDPRODUIT)
);
/*==============================================================*/
/* Table : REGLEMENT_SALAIRE                                    */
/*==============================================================*/
CREATE TABLE REGLEMENT_SALAIRE (
    IDREGLEMENT INT4 NOT NULL,
    IDCOURSIER INT4 NULL,
    IDLIVREUR INT4 NULL,
    MONTANTREGLEMENT NUMERIC(6, 2) NULL,
    CONSTRAINT CK_SALAIRE_MNT CHECK (MONTANTREGLEMENT >= 0),
    CONSTRAINT PK_REGLEMENT_SALAIRE PRIMARY KEY (IDREGLEMENT)
);
/*==============================================================*/
/* Table : RESERVATION                                          */
/*==============================================================*/
CREATE TABLE RESERVATION (
    IDRESERVATION INT4 NOT NULL,
    IDCLIENT INT4 NOT NULL,
    DATERESERVATION DATE NULL,
    CONSTRAINT CK_RESERVATION_DATE CHECK (DATERESERVATION <= CURRENT_DATE),
    HEURERESERVATION TIME NULL,
    POURQUI VARCHAR(100) NULL,
    CONSTRAINT PK_RESERVATION PRIMARY KEY (IDRESERVATION)
);
/*==============================================================*/
/* Table : RESPONSABLE_ENSEIGNE                                 */
/*==============================================================*/
CREATE TABLE RESPONSABLE_ENSEIGNE (
    IDRESPONSABLE INT4 NOT NULL,
    NOMUSER VARCHAR(50) NOT NULL,
    PRENOMUSER VARCHAR(50) NOT NULL,
    TELEPHONE VARCHAR(20) NOT NULL,
    CONSTRAINT CK_RESPONSABLE_TEL CHECK (
        TELEPHONE ~ '^(06|07)[0-9]{8}$'
        OR TELEPHONE ~ '^\+?[1-9][0-9]{1,14}$'
    ),
    EMAILUSER VARCHAR(200) NOT NULL,
    CONSTRAINT UQ_RESPONSABLE_EMAIL UNIQUE (EMAILUSER),
    CONSTRAINT CK_CLIENT_EMAIL_FORMAT CHECK (
        EMAILUSER ~ '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    ),
    MOTDEPASSEUSER VARCHAR(200) NOT NULL,
    CONSTRAINT PK_RESPONSABLE_ENSEIGNE PRIMARY KEY (IDRESPONSABLE)
);
/*==============================================================*/
/* Table : RESTAURATEUR                                         */
/*==============================================================*/
CREATE TABLE RESTAURATEUR (
    IDRESTAURATEUR INT4 NOT NULL,
    NOMUSER VARCHAR(50) NOT NULL,
    PRENOMUSER VARCHAR(50) NOT NULL,
    TELEPHONE VARCHAR(20) NOT NULL,
    CONSTRAINT CK_RESTAURATEUR_TEL CHECK (
        TELEPHONE ~ '^(06|07)[0-9]{8}$'
        OR TELEPHONE ~ '^\+?[1-9][0-9]{1,14}$'
    ),
    EMAILUSER VARCHAR(200) NOT NULL,
    CONSTRAINT UQ_RESTAURATEUR_MAIL UNIQUE (EMAILUSER),
    CONSTRAINT CK_CLIENT_EMAIL_FORMAT CHECK (
        EMAILUSER ~ '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    ),
    MOTDEPASSEUSER VARCHAR(200) NOT NULL,
    CONSTRAINT PK_RESTAURATEUR PRIMARY KEY (IDRESTAURATEUR)
);
/*==============================================================*/
/* Table : GESTION_ETABLISSEMENT                                */
/*==============================================================*/
CREATE TABLE GESTION_ETABLISSEMENT (
    IDGESTION INT4 NOT NULL,
    IDETABLISSEMENT INT4 NOT NULL,
    IDRESPONSABLE INT4 NOT NULL,
    CONSTRAINT PK_GESTION_ETABLISSEMENT PRIMARY KEY (IDGESTION)
);
/*==============================================================*/
/* Table : TYPE_PRESTATION                                      */
/*==============================================================*/
CREATE TABLE TYPE_PRESTATION (
    IDPRESTATION INT4 NOT NULL,
    LIBELLEPRESTATION VARCHAR(50) NULL,
    DESCRIPTIONPRESTATION VARCHAR(500) NULL,
    IMAGEPRESTATION VARCHAR(300) NULL,
    CONSTRAINT PK_TYPE_PRESTATION PRIMARY KEY (IDPRESTATION)
);
/*==============================================================*/
/* Table : CATEGORIE_PRESTATION                                 */
/*==============================================================*/
CREATE TABLE CATEGORIE_PRESTATION (
    IDCATEGORIEPRESTATION INT4 NOT NULL,
    LIBELLECATEGORIEPRESTATION VARCHAR(50) NULL,
    DESCRIPTIONCATEGORIEPRESTATION VARCHAR(500) NULL,
    IMAGECATEGORIEPRESTATION VARCHAR(300) NULL,
    CONSTRAINT PK_CATEGORIE_PRESTATION PRIMARY KEY (IDCATEGORIEPRESTATION)
);
/*==============================================================*/
/* Table : A_COMME_CATEGORIE                                    */
/*==============================================================*/
CREATE TABLE A_COMME_CATEGORIE (
    IDCATEGORIEPRESTATION INT4 NOT NULL,
    IDETABLISSEMENT INT4 NOT NULL,
    CONSTRAINT PK_A_COMME_CATEGORIE PRIMARY KEY (IDCATEGORIEPRESTATION, IDETABLISSEMENT)
);
/*==============================================================*/
/* Table : VEHICULE                                             */
/*==============================================================*/
CREATE TABLE VEHICULE (
    IDVEHICULE INT4 NOT NULL,
    IDCOURSIER INT4 NOT NULL,
    IMMATRICULATION CHAR(9) NOT NULL,
    CONSTRAINT CK_VEHICULE_IMMATRICULATION CHECK (IMMATRICULATION ~ '^[A-Z]{2}-[0-9]{3}-[A-Z]{2}$'),
    CONSTRAINT UQ_VEHICULE_IMMATRICULATION UNIQUE (IMMATRICULATION),
    MARQUE VARCHAR(50) NULL,
    MODELE VARCHAR(50) NULL,
    CAPACITE INT4 NULL,
    CONSTRAINT CK_VEHICULE_CAPACITE CHECK (
        CAPACITE BETWEEN 2 AND 7
    ),
    ACCEPTEANIMAUX BOOLEAN NOT NULL,
    ESTELECTRIQUE BOOLEAN NOT NULL,
    ESTCONFORTABLE BOOLEAN NOT NULL,
    ESTRECENT BOOLEAN NOT NULL,
    ESTLUXUEUX BOOLEAN NOT NULL,
    COULEUR VARCHAR(20) NULL,
    STATUSPROCESSUSLOGISTIQUE VARCHAR(50) NOT NULL DEFAULT 'En attente',
    CONSTRAINT CK_STATUS_VEHICULE CHECK (
        STATUSPROCESSUSLOGISTIQUE IN (
            'En attente',
            'Validé',
            'Refusé',
            'Modifications demandées'
        )
    ),
    DEMANDEMODIFICATION TEXT NULL,
    DEMANDEMODIFICATIONEFFECTUE BOOLEAN NOT NULL DEFAULT FALSE,
    CONSTRAINT PK_VEHICULE PRIMARY KEY (IDVEHICULE)
);
/*==============================================================*/
/* Table : VELO                                                 */
/*==============================================================*/
CREATE TABLE VELO (
    IDVELO INT4 NOT NULL,
    IDADRESSE INT4 NOT NULL,
    NUMEROVELO INT4 NOT NULL,
    CONSTRAINT UQ_VELO_NUMERO UNIQUE (NUMEROVELO),
    ESTDISPONIBLE BOOLEAN NOT NULL,
    CONSTRAINT PK_VELO PRIMARY KEY (IDVELO)
);
/*==============================================================*/
/* Table : VELO_RESERVATION                                     */
/*==============================================================*/
CREATE TABLE VELO_RESERVATION (
    IDRESERVATION_VELO INT4 NOT NULL,
    IDVELO INT4 NOT NULL,
    DUREERESERVATION INT4 NOT NULL,
    PRIXRESERVATION DECIMAL(6, 2) NOT NULL,
    CONSTRAINT PK_VELO_RESERVATION PRIMARY KEY (IDRESERVATION_VELO, IDVELO)
);
/*==============================================================*/
/* Table : VILLE                                                */
/*==============================================================*/
CREATE TABLE VILLE (
    IDVILLE INT4 NOT NULL,
    IDPAYS INT4 NULL,
    IDCODEPOSTAL INT4 NULL,
    NOMVILLE VARCHAR(50) NOT NULL,
    CONSTRAINT PK_VILLE PRIMARY KEY (IDVILLE)
);
/*==============================================================*/
/* Contraintes de clés étrangères                               */
/*==============================================================*/
/* Relation ADRESSE - VILLE */
ALTER TABLE ADRESSE
ADD CONSTRAINT FK_ADRESSE_VILLE FOREIGN KEY (IDVILLE) REFERENCES VILLE (IDVILLE) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation CLIENT_CARTE - CARTE_BANCAIRE */
ALTER TABLE CLIENT_CARTE
ADD CONSTRAINT FK_APPARTIENT2_CARTE_BANCAIRE FOREIGN KEY (IDCB) REFERENCES CARTE_BANCAIRE (IDCB) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation CLIENT_CARTE - CLIENT */
ALTER TABLE CLIENT_CARTE
ADD CONSTRAINT FK_APPARTIENT2_CLIENT FOREIGN KEY (IDCLIENT) REFERENCES CLIENT (IDCLIENT) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation PRODUIT_CATEGORIE - PRODUIT */
ALTER TABLE PRODUIT_CATEGORIE
ADD CONSTRAINT FK_A3_PRODUIT FOREIGN KEY (IDPRODUIT) REFERENCES PRODUIT (IDPRODUIT) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation PRODUIT_CATEGORIE - CATEGORIE_PRODUIT */
ALTER TABLE PRODUIT_CATEGORIE
ADD CONSTRAINT FK_A3_CATEGORIE_PRODUIT FOREIGN KEY (IDCATEGORIE) REFERENCES CATEGORIE_PRODUIT (IDCATEGORIE) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation A_COMME_TYPE - VEHICULE */
ALTER TABLE A_COMME_TYPE
ADD CONSTRAINT FK_A_COMME_TYPE_VEHICULE FOREIGN KEY (IDVEHICULE) REFERENCES VEHICULE (IDVEHICULE) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation A_COMME_TYPE - TYPE_PRESTATION */
ALTER TABLE A_COMME_TYPE
ADD CONSTRAINT FK_A_COMME_TYPE_TYPE_PRESTATION FOREIGN KEY (IDPRESTATION) REFERENCES TYPE_PRESTATION (IDPRESTATION) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation CLIENT - ENTREPRISE */
ALTER TABLE CLIENT
ADD CONSTRAINT FK_CLIENT_ENTREPRISE FOREIGN KEY (IDENTREPRISE) REFERENCES ENTREPRISE (IDENTREPRISE) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation CLIENT - ADRESSE */
ALTER TABLE CLIENT
ADD CONSTRAINT FK_CLIENT_ADRESSE FOREIGN KEY (IDADRESSE) REFERENCES ADRESSE (IDADRESSE) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation CODE_POSTAL - PAYS */
ALTER TABLE CODE_POSTAL
ADD CONSTRAINT FK_CODE_POSTAL_PAYS FOREIGN KEY (IDPAYS) REFERENCES PAYS (IDPAYS) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation COMMANDE - LIVREUR */
ALTER TABLE COMMANDE
ADD CONSTRAINT FK_COMMANDE_LIVREUR FOREIGN KEY (IDLIVREUR) REFERENCES LIVREUR (IDLIVREUR) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation COMMANDE - PANIER */
ALTER TABLE COMMANDE
ADD CONSTRAINT FK_COMMANDE_PANIER FOREIGN KEY (IDPANIER) REFERENCES PANIER (IDPANIER) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation CONTIENT_2 - PANIER */
ALTER TABLE CONTIENT_2
ADD CONSTRAINT FK_CONTIENT2_PANIER FOREIGN KEY (IDPANIER) REFERENCES PANIER (IDPANIER) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation CONTIENT_2 - PRODUIT */
ALTER TABLE CONTIENT_2
ADD CONSTRAINT FK_CONTIENT2_PRODUIT FOREIGN KEY (IDPRODUIT) REFERENCES PRODUIT (IDPRODUIT) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation CONTIENT_2 - ETABLISSEMENT */
ALTER TABLE CONTIENT_2
ADD CONSTRAINT FK_CONTIENT2_ETABLISSEMENT FOREIGN KEY (IDETABLISSEMENT) REFERENCES ETABLISSEMENT (IDETABLISSEMENT) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation COURSE - TYPE_PRESTATION */
ALTER TABLE COURSE
ADD CONSTRAINT FK_COURSE_TYPE_PRESTATION FOREIGN KEY (IDPRESTATION) REFERENCES TYPE_PRESTATION (IDPRESTATION) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation COURSE - RESERVATION */
ALTER TABLE COURSE
ADD CONSTRAINT FK_COURSE_RESERVATION FOREIGN KEY (IDRESERVATION) REFERENCES RESERVATION (IDRESERVATION) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation COURSE - ADRESSE (Départ) */
ALTER TABLE COURSE
ADD CONSTRAINT FK_COURSE_ADRESSE_DEPART FOREIGN KEY (ADR_IDADRESSE) REFERENCES ADRESSE (IDADRESSE) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation COURSE - ADRESSE (Arrivée) */
ALTER TABLE COURSE
ADD CONSTRAINT FK_COURSE_ADRESSE_ARRIVEE FOREIGN KEY (IDADRESSE) REFERENCES ADRESSE (IDADRESSE) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation COURSE - CARTE_BANCAIRE */
ALTER TABLE COURSE
ADD CONSTRAINT FK_COURSE_CARTE_BANCAIRE FOREIGN KEY (IDCB) REFERENCES CARTE_BANCAIRE (IDCB) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation COURSE - COURSIER */
ALTER TABLE COURSE
ADD CONSTRAINT FK_COURSE_COURSIER FOREIGN KEY (IDCOURSIER) REFERENCES COURSIER (IDCOURSIER) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation COURSIER - ENTREPRISE */
ALTER TABLE COURSIER
ADD CONSTRAINT FK_COURSIER_ENTREPRISE FOREIGN KEY (IDENTREPRISE) REFERENCES ENTREPRISE (IDENTREPRISE) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation COURSIER - ADRESSE */
ALTER TABLE COURSIER
ADD CONSTRAINT FK_COURSIER_ADRESSE FOREIGN KEY (IDADRESSE) REFERENCES ADRESSE (IDADRESSE) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation ETABLISSEMENT - RESTAURATEUR */
ALTER TABLE ETABLISSEMENT
ADD CONSTRAINT FK_ETABLISSEMENT_RESTAURATEUR FOREIGN KEY (IDRESTAURATEUR) REFERENCES RESTAURATEUR (IDRESTAURATEUR) ON DELETE CASCADE;
/* Relation ETABLISSEMENT - ADRESSE */
ALTER TABLE ETABLISSEMENT
ADD CONSTRAINT FK_ETABLISSEMENT_ADRESSE FOREIGN KEY (IDADRESSE) REFERENCES ADRESSE (IDADRESSE) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation GESTION_ETABLISSEMENT - ETABLISSEMENT */
ALTER TABLE GESTION_ETABLISSEMENT
ADD CONSTRAINT FK_GESTION_ETABLISSEMENT FOREIGN KEY (IDETABLISSEMENT) REFERENCES ETABLISSEMENT (IDETABLISSEMENT) ON DELETE CASCADE;
/* Relation GESTION_ETABLISSEMENT - RESPONSABLE */
ALTER TABLE GESTION_ETABLISSEMENT
ADD CONSTRAINT FK_GESTION_RESPONSABLE FOREIGN KEY (IDRESPONSABLE) REFERENCES RESPONSABLE_ENSEIGNE (IDRESPONSABLE) ON DELETE CASCADE;
/* Relation ENTREPRISE - ADRESSE */
ALTER TABLE ENTREPRISE
ADD CONSTRAINT FK_ENTREPRISE_ADRESSE FOREIGN KEY (IDADRESSE) REFERENCES ADRESSE (IDADRESSE) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation ENTRETIEN - COURSIER */
ALTER TABLE ENTRETIEN
ADD CONSTRAINT FK_ENTRETIEN_COURSIER FOREIGN KEY (IDCOURSIER) REFERENCES COURSIER (IDCOURSIER) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE EST_SITUE_A_2
ADD CONSTRAINT FK_EST_SITUE2_PRODUIT FOREIGN KEY (IDPRODUIT) REFERENCES PRODUIT (IDPRODUIT) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE EST_SITUE_A_2
ADD CONSTRAINT FK_EST_SITUE2_ETABLISSEMENT FOREIGN KEY (IDETABLISSEMENT) REFERENCES ETABLISSEMENT (IDETABLISSEMENT) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation ETABLISSEMENT - A_COMME_CATEGORIE */
ALTER TABLE A_COMME_CATEGORIE
ADD CONSTRAINT FK_A_COMME_CATEGORIE_ETABLISSEMENT FOREIGN KEY (IDETABLISSEMENT) REFERENCES ETABLISSEMENT (IDETABLISSEMENT) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation CATEGORIE_PRESTATION - A_COMME_CATEGORIE */
ALTER TABLE A_COMME_CATEGORIE
ADD CONSTRAINT FK_A_COMME_CATEGORIE_CATEGORIE FOREIGN KEY (IDCATEGORIEPRESTATION) REFERENCES CATEGORIE_PRESTATION (IDCATEGORIEPRESTATION) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation HORAIRES - ETABLISSEMENT */
ALTER TABLE HORAIRES
ADD CONSTRAINT FK_HORAIRES_ETABLISSEMENT FOREIGN KEY (IDETABLISSEMENT) REFERENCES ETABLISSEMENT (IDETABLISSEMENT) ON DELETE CASCADE;
/* Relation HORAIRES_COURSIER - COURSIER */
ALTER TABLE HORAIRES
ADD CONSTRAINT FK_HORAIRES_COURSIER FOREIGN KEY (IDCOURSIER) REFERENCES COURSIER (IDCOURSIER) ON DELETE CASCADE;
/* Relation HORAIRES_LIVREUR - LIVREUR */
ALTER TABLE HORAIRES
ADD CONSTRAINT FK_HORAIRES_LIVREUR FOREIGN KEY (IDLIVREUR) REFERENCES LIVREUR (IDLIVREUR) ON DELETE CASCADE;
/* Relation FACTURE - RESERVATION */
ALTER TABLE FACTURE
ADD CONSTRAINT FK_FACTURE_RESERVATION FOREIGN KEY (IDRESERVATION) REFERENCES RESERVATION (IDRESERVATION) ON DELETE
SET NULL ON UPDATE CASCADE;
/* Relation FACTURE - COMMANDE */
ALTER TABLE FACTURE
ADD CONSTRAINT FK_FACTURE_COMMANDE FOREIGN KEY (IDCOMMANDE) REFERENCES COMMANDE (IDCOMMANDE) ON DELETE
SET NULL ON UPDATE CASCADE;
/* Relation FACTURE - CLIENT */
ALTER TABLE FACTURE
ADD CONSTRAINT FK_FACTURE_CLIENT FOREIGN KEY (IDCLIENT) REFERENCES CLIENT (IDCLIENT) ON DELETE
SET NULL ON UPDATE CASCADE;
/* Relation FACTURE - PAYS */
ALTER TABLE FACTURE
ADD CONSTRAINT FK_FACTURE_PAYS FOREIGN KEY (IDPAYS) REFERENCES PAYS (IDPAYS) ON DELETE
SET NULL ON UPDATE CASCADE;
/* Relation LIEU_FAVORI - CLIENT */
ALTER TABLE LIEU_FAVORI
ADD CONSTRAINT FK_LIEU_FAVORI_CLIENT FOREIGN KEY (IDCLIENT) REFERENCES CLIENT (IDCLIENT) ON DELETE CASCADE ON UPDATE CASCADE;
/* Relation LIEU_FAVORI - ADRESSE */
ALTER TABLE LIEU_FAVORI
ADD CONSTRAINT FK_LIEU_FAVORI_ADRESSE FOREIGN KEY (IDADRESSE) REFERENCES ADRESSE (IDADRESSE) ON DELETE CASCADE ON UPDATE CASCADE;
/* Relation OTP - CLIENT */
ALTER TABLE OTP
ADD CONSTRAINT FK_OTP_CLIENT FOREIGN KEY (IDCLIENT) REFERENCES CLIENT (IDCLIENT) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE PANIER
ADD CONSTRAINT FK_PANIER_CLIENT FOREIGN KEY (IDCLIENT) REFERENCES CLIENT (IDCLIENT) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation REGLEMENT_SALAIRE - COURSIER */
ALTER TABLE REGLEMENT_SALAIRE
ADD CONSTRAINT FK_REGLEMENT_SALAIRE_COURSIER FOREIGN KEY (IDCOURSIER) REFERENCES COURSIER (IDCOURSIER) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation RESERVATION - CLIENT */
ALTER TABLE RESERVATION
ADD CONSTRAINT FK_RESERVATION_CLIENT FOREIGN KEY (IDCLIENT) REFERENCES CLIENT (IDCLIENT) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation VELO_RESERVATION - RESERVATION */
ALTER TABLE VELO_RESERVATION
ADD CONSTRAINT FK_VELO_RESERVATION_RESERVATION FOREIGN KEY (IDRESERVATION_VELO) REFERENCES RESERVATION (IDRESERVATION) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation VELO_RESERVATION - VELO */
ALTER TABLE VELO_RESERVATION
ADD CONSTRAINT FK_VELO_RESERVATION_VELO FOREIGN KEY (IDVELO) REFERENCES VELO (IDVELO) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE VEHICULE
ADD CONSTRAINT FK_VEHICULE_COURSIER FOREIGN KEY (IDCOURSIER) REFERENCES COURSIER (IDCOURSIER) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation VELO - ADRESSE */
ALTER TABLE VELO
ADD CONSTRAINT FK_VELO_ADRESSE FOREIGN KEY (IDADRESSE) REFERENCES ADRESSE (IDADRESSE) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation VILLE - CODE_POSTAL */
ALTER TABLE VILLE
ADD CONSTRAINT FK_VILLE_CODE_POSTAL FOREIGN KEY (IDCODEPOSTAL) REFERENCES CODE_POSTAL (IDCODEPOSTAL) ON DELETE RESTRICT ON UPDATE RESTRICT;
/* Relation VILLE - PAYS */
ALTER TABLE VILLE
ADD CONSTRAINT FK_VILLE_PAYS FOREIGN KEY (IDPAYS) REFERENCES PAYS (IDPAYS) ON DELETE RESTRICT ON UPDATE RESTRICT;